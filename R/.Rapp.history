source("/Users/loconnor/GitHub/LCV/R/RunLCV.R")
cd(/Users/loconnor/GitHub/LCV/R)
cd("/Users/loconnor/GitHub/LCV/R")
setwd("/Users/loconnor/GitHub/LCV/R")
RunLCV(1,1,1,1,1)
source("MomentFunctions.R")
RunLCV(1,1,1,1,1)
rm(list=ls())
RunLCV(1,1,1,1,1)
setwd("/Users/loconnor/GitHub/LCV/R")
RunLCV(1,1,1,1,1)
RunLCV(1,1,1,1,1)
source("RunLCV.r")
RunLCV(1,1,1,1,1)
RunLCV(1,1,1,1,1,1,1)
log(3/2)
log(3/2)/log(2)
disp(3)
sprintf("asdf")
sprintf("asdf %f",3)
sprintf("asdf %.2f",3)
rn(3)
randn(3)
rnorm(3)
matrix(2)
matrix(2,2)
rnorm(2,2)
diag(rnorm(3))
diag(rnorm(3))*rnorm(3)
ones(3)
repmat(1,3)
r(0,3)
rep(0,3)
M=diag(rnorm(3))
sum(M)
M
diag(M)
M+1
(M+1)^2
(M+1).^2
p=rnorm(5)
p*t(p)
p%*%t(p)
p%*%1
pt(10,1)
pt(10,100)
pt(2,100)
pt(2,10000)
source("ExampleScript.R")
setwd("/Users/loconnor/GitHub/LCV/R")
source("ExampleScript.R")
ExampleScript
ls
ls()
ls()
setwd("/Users/loconnor/GitHub/LCV/R")
ls()
cd("/Users/loconnor/GitHub/LCV/R")
source("ExampleScript.R")
source("ExampleScript.R")
source("SimulateLCV.R")
source("SimulateLCV.R")
source("RunLCV.R")
source("ExampleScript.R")
source("ExampleScript.R")
source("ExampleScript.R")
source("ExampleScript.R")
a=3
b=4
data=data.frame(a,b)
data$a
source("ExampleScript.R")
ExampleScript
run(ExampleScript.R)
run(ExampleScript)
source("ExampleScript.R",1)
source("ExampleScript.R",TRUE)
source("SimulateLCV.R")#
source("RunLCV.R")#
## Simulation parameters#
#
M<-50000 # total number of SNPs#
#
N.1<-20000 # sample size Y1 (note: this script doesn't actually generate individual-level data; set N.k as large as you want)#
N.2<-50000 # sample size Y2#
#
h2.1<-.1 # Y1 heritability#
h2.2<-.1 # Y2 heritability#
#
q.1<-1 # effect of L on Y1#
q.2<-0.2 # effect of L on Y2#
#
gcp.true<-log(q.2/q.1)/log(q.2*q.1) #
rho.true<-q.1*q.2 #
sprintf("gcp=%.2f, rho=%.2f\n",gcp.true, rho.true)#
#
p.pi<-.05 # Proportion of SNPs causal for L. p.pi*M should be an integer.#
p.g1<-.05 # Proportion of SNPs causal for Y1 only#
p.g2<-.2 # Proportion of SNPs causal for Y2 only#
#
## LCV parameters#
crosstrait.intercept<-0 # Whether to use intercept in cross-trait LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
ldsc.intercept<-0 # Whether to use intercept in univariate LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
# Significance threshold: throw out SNPs about this threshold times mean#
#   chisq for computing LDSC intercept (all SNPs are included in other#
#   parts of the analysis)#
sig.threshold<-30#
#
# Number of jackknife blocks#
no.blocks<-100#
#
# Value of crosstrait LDSC intercept. Only applicable if crosstrait.intercept==1.#
# Should be zero for non-overlapping cohorts.#
intercept.12<-0;#
#
ell<-rep(1,M) # LD scores#
weights <- rep(1,M) # regression weights#
#
## Simulate from LCV model#
alpha<-SimulateLCV(M,N.1,N.2,h2.1,h2.2,q.1,q.2,p.pi,p.g1,p.g2)#
#
## Run LCV#
#
LCV<- RunLCV(ell,alpha$a1,alpha$a2,no.blocks,crosstrait.intercept,ldsc.intercept,weights,sig.threshold,N.1,N.2,intercept.12)#
#
pval.1tail<-pt(LCV$zscore,no.blocks-2)#
pval.2tail<-2*min(pval.1tail,1-pval.1tail)#
#
sprintf("Estimated posterior gcp=%.2f(%.2f), p=%f;\n estimated rho=%.2f(%.2f)\n",LCV$gcp.pm, LCV$gcp.pse, pval.2tail, LCV$rho.est, LCV$rho.err)
source("SimulateLCV.R")#
source("RunLCV.R")#
## Simulation parameters#
#
M<-50000 # total number of SNPs#
#
N.1<-20000 # sample size Y1 (note: this script doesn't actually generate individual-level data; set N.k as large as you want)#
N.2<-50000 # sample size Y2#
#
h2.1<-.1 # Y1 heritability#
h2.2<-.1 # Y2 heritability#
#
q.1<-1 # effect of L on Y1#
q.2<-0.2 # effect of L on Y2#
#
gcp.true<-log(q.2/q.1)/log(q.2*q.1) #
rho.true<-q.1*q.2 #
sprintf("gcp=%.2f, rho=%.2f\n",gcp.true, rho.true)#
#
p.pi<-.05 # Proportion of SNPs causal for L. p.pi*M should be an integer.#
p.g1<-.05 # Proportion of SNPs causal for Y1 only#
p.g2<-.2 # Proportion of SNPs causal for Y2 only#
#
## LCV parameters#
crosstrait.intercept<-0 # Whether to use intercept in cross-trait LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
ldsc.intercept<-0 # Whether to use intercept in univariate LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
# Significance threshold: throw out SNPs about this threshold times mean#
#   chisq for computing LDSC intercept (all SNPs are included in other#
#   parts of the analysis)#
sig.threshold<-30#
#
# Number of jackknife blocks#
no.blocks<-100#
#
# Value of crosstrait LDSC intercept. Only applicable if crosstrait.intercept==1.#
# Should be zero for non-overlapping cohorts.#
intercept.12<-0;#
#
ell<-rep(1,M) # LD scores#
weights <- rep(1,M) # regression weights#
#
## Simulate from LCV model#
alpha<-SimulateLCV(M,N.1,N.2,h2.1,h2.2,q.1,q.2,p.pi,p.g1,p.g2)#
#
## Run LCV#
#
LCV<- RunLCV(ell,alpha$a1,alpha$a2,no.blocks,crosstrait.intercept,ldsc.intercept,weights,sig.threshold,N.1,N.2,intercept.12)#
#
pval.1tail<-pt(LCV$zscore,no.blocks-2)#
pval.2tail<-2*min(pval.1tail,1-pval.1tail)#
#
sprintf("Estimated posterior gcp=%.2f(%.2f), p=%f;\n estimated rho=%.2f(%.2f)\n",LCV$gcp.pm, LCV$gcp.pse, pval.2tail, LCV$rho.est, LCV$rho.err)
source("SimulateLCV.R")#
source("RunLCV.R")#
## Simulation parameters#
#
M<-50000 # total number of SNPs#
#
N.1<-20000 # sample size Y1 (note: this script doesn't actually generate individual-level data; set N.k as large as you want)#
N.2<-50000 # sample size Y2#
#
h2.1<-.1 # Y1 heritability#
h2.2<-.1 # Y2 heritability#
#
q.1<-1 # effect of L on Y1#
q.2<-0.2 # effect of L on Y2#
#
gcp.true<-log(q.2/q.1)/log(q.2*q.1) #
rho.true<-q.1*q.2 #
sprintf("gcp=%.2f, rho=%.2f\n",gcp.true, rho.true)#
#
p.pi<-.05 # Proportion of SNPs causal for L. p.pi*M should be an integer.#
p.g1<-.05 # Proportion of SNPs causal for Y1 only#
p.g2<-.2 # Proportion of SNPs causal for Y2 only#
#
## LCV parameters#
crosstrait.intercept<-0 # Whether to use intercept in cross-trait LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
ldsc.intercept<-0 # Whether to use intercept in univariate LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
# Significance threshold: throw out SNPs about this threshold times mean#
#   chisq for computing LDSC intercept (all SNPs are included in other#
#   parts of the analysis)#
sig.threshold<-30#
#
# Number of jackknife blocks#
no.blocks<-100#
#
# Value of crosstrait LDSC intercept. Only applicable if crosstrait.intercept==1.#
# Should be zero for non-overlapping cohorts.#
intercept.12<-0;#
#
ell<-rep(1,M) # LD scores#
weights <- rep(1,M) # regression weights#
#
## Simulate from LCV model#
alpha<-SimulateLCV(M,N.1,N.2,h2.1,h2.2,q.1,q.2,p.pi,p.g1,p.g2)#
#
## Run LCV#
#
LCV<- RunLCV(ell,alpha$a1,alpha$a2,no.blocks,crosstrait.intercept,ldsc.intercept,weights,sig.threshold,N.1,N.2,intercept.12)#
#
pval.1tail<-pt(LCV$zscore,no.blocks-2)#
pval.2tail<-2*min(pval.1tail,1-pval.1tail)#
#
sprintf("Estimated posterior gcp=%.2f(%.2f), p=%f;\n estimated rho=%.2f(%.2f)\n",LCV$gcp.pm, LCV$gcp.pse, pval.2tail, LCV$rho.est, LCV$rho.err)
source("SimulateLCV.R")#
source("RunLCV.R")#
## Simulation parameters#
#
M<-50000 # total number of SNPs#
#
N.1<-20000 # sample size Y1 (note: this script doesn't actually generate individual-level data; set N.k as large as you want)#
N.2<-50000 # sample size Y2#
#
h2.1<-.3 # Y1 heritability#
h2.2<-.3 # Y2 heritability#
#
q.1<-1 # effect of L on Y1#
q.2<-0.2 # effect of L on Y2#
#
gcp.true<-log(q.2/q.1)/log(q.2*q.1) #
rho.true<-q.1*q.2 #
sprintf("gcp=%.2f, rho=%.2f\n",gcp.true, rho.true)#
#
p.pi<-.05 # Proportion of SNPs causal for L. p.pi*M should be an integer.#
p.g1<-.05 # Proportion of SNPs causal for Y1 only#
p.g2<-.2 # Proportion of SNPs causal for Y2 only#
#
## LCV parameters#
crosstrait.intercept<-0 # Whether to use intercept in cross-trait LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
ldsc.intercept<-0 # Whether to use intercept in univariate LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
# Significance threshold: throw out SNPs about this threshold times mean#
#   chisq for computing LDSC intercept (all SNPs are included in other#
#   parts of the analysis)#
sig.threshold<-30#
#
# Number of jackknife blocks#
no.blocks<-100#
#
# Value of crosstrait LDSC intercept. Only applicable if crosstrait.intercept==1.#
# Should be zero for non-overlapping cohorts.#
intercept.12<-0;#
#
ell<-rep(1,M) # LD scores#
weights <- rep(1,M) # regression weights#
#
## Simulate from LCV model#
alpha<-SimulateLCV(M,N.1,N.2,h2.1,h2.2,q.1,q.2,p.pi,p.g1,p.g2)#
#
## Run LCV#
#
LCV<- RunLCV(ell,alpha$a1,alpha$a2,no.blocks,crosstrait.intercept,ldsc.intercept,weights,sig.threshold,N.1,N.2,intercept.12)#
#
pval.1tail<-pt(LCV$zscore,no.blocks-2)#
pval.2tail<-2*min(pval.1tail,1-pval.1tail)#
#
sprintf("Estimated posterior gcp=%.2f(%.2f), p=%f;\n estimated rho=%.2f(%.2f)\n",LCV$gcp.pm, LCV$gcp.pse, pval.2tail, LCV$rho.est, LCV$rho.err)
log10(1000)
source("SimulateLCV.R")#
source("RunLCV.R")#
## Simulation parameters#
#
M<-50000 # total number of SNPs#
#
N.1<-20000 # sample size Y1 (note: this script doesn't actually generate individual-level data; set N.k as large as you want)#
N.2<-50000 # sample size Y2#
#
h2.1<-.3 # Y1 heritability#
h2.2<-.3 # Y2 heritability#
#
q.1<-1 # effect of L on Y1#
q.2<-0.2 # effect of L on Y2#
#
gcp.true<-log(q.2/q.1)/log(q.2*q.1) #
rho.true<-q.1*q.2 #
sprintf("gcp=%.2f, rho=%.2f\n",gcp.true, rho.true)#
#
p.pi<-.05 # Proportion of SNPs causal for L. p.pi*M should be an integer.#
p.g1<-.05 # Proportion of SNPs causal for Y1 only#
p.g2<-.2 # Proportion of SNPs causal for Y2 only#
#
## LCV parameters#
crosstrait.intercept<-0 # Whether to use intercept in cross-trait LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
ldsc.intercept<-0 # Whether to use intercept in univariate LDSC regression. Should be 0 if there is no LD (generally, recommend setting this to 1 in real-data analyses)#
#
# Significance threshold: throw out SNPs about this threshold times mean#
#   chisq for computing LDSC intercept (all SNPs are included in other#
#   parts of the analysis)#
sig.threshold<-30#
#
# Number of jackknife blocks#
no.blocks<-100#
#
# Value of crosstrait LDSC intercept. Only applicable if crosstrait.intercept==1.#
# Should be zero for non-overlapping cohorts.#
intercept.12<-0;#
#
ell<-rep(1,M) # LD scores#
weights <- rep(1,M) # regression weights#
#
## Simulate from LCV model#
alpha<-SimulateLCV(M,N.1,N.2,h2.1,h2.2,q.1,q.2,p.pi,p.g1,p.g2)#
#
## Run LCV#
#
LCV<- RunLCV(ell,alpha$a1,alpha$a2,no.blocks,crosstrait.intercept,ldsc.intercept,weights,sig.threshold,N.1,N.2,intercept.12)#
#
pval.1tail<-pt(LCV$zscore,no.blocks-2)#
pval.2tail<-2*min(pval.1tail,1-pval.1tail)#
#
sprintf("Estimated posterior gcp=%.2f(%.2f), log10(p)=%.1f;\n estimated rho=%.2f(%.2f)\n",LCV$gcp.pm, LCV$gcp.pse, log10(pval.2tail), LCV$rho.est, LCV$rho.err)
LCV$zscore
logpval.1tail<-pt(LCV$zscore,no.blocks-2,log.p=1)
logpval.1tail
logpval.1tail<-pt(1,no.blocks-2,log.p=1)
logpval.1tail
10^logpval.1tail
pval.1tail<-pt(1,no.blocks-2)
pval.1tail
log(pval.1tail)
